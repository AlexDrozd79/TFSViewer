@page
@model UCloseInReleaseModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">

    <div id="controls">
        <select id="releases">
            @foreach (var item in Model.Releases.Select(a => a.ReleaseName))
            {
                if (@item == Model.CurrentRelease)
                {
                    <option value="@item" selected>@item</option>
                }
                else
                {
                    <option value="@item">@item</option>
                }
            }
        </select>

        <select id="areapath">
            @foreach (var item in Model.Teams)
            {
                <option value="@item">@item</option>
            }
        </select>

        <button id="go">GO</button>

        <span id="endRelease"></span>
        <input type="checkbox" checked id="checkAddDay" /><label>add additioan day to due date</label>
        <input type="checkbox" checked id="isBusiness" /><label>show only business US</label>
    </div>
    <div id = "summary">
        <label>Delays count: </label><span id = "usDelaysCount"></span>
        <label>All US count: </label><span id = "usCount"></span>
        <label>Delays percentage: </label><span id = "usDelaysPersentage"></span>
    </div>


    <table id="ALL" class="data-table"> </table>



    <script>
        var releasesData = @Json.Serialize(Model.Releases.ToArray());
        var globalInfo = null;
        const DELAYED = "delayed";


        function DrawTable(info, tag) {

            var releaseIndex = $("#releases")[0].selectedIndex;
            var endDate = releasesData[releaseIndex].endDate.split('T')[0];
            var isAddDay = $("#checkAddDay").is(':checked');
            var isBusiness = $("#isBusiness").is(':checked');
            var delaysCount = 0;

            info = ApplyFilters(info, isBusiness);

            $("#" + tag).empty();
            $("#" + tag).append('<tr class="table_header"><td>&nbsp;</td><td>ID</td><td>Title</td><td>AssignedTo</td><td>ClosedDate</td><td>Tags</td><td>Business</td></tr>');
            $(info).each(function (index, value) {
                var tagValue = GetFieldValue(value.fields, 'System.Tags');
                var className = GetClassName(endDate, value.fields['Microsoft.VSTS.Common.ClosedDate'], isAddDay, tagValue);

                delaysCount += (className == DELAYED ? 1 : 0);

                $("#" + tag).append('<tr class="' + className + '"><td class="status">&nbsp;</td><td>' + GetIDLink(value.id) + '</td>'
                    + '<td>' + value.fields['System.Title'] + '</td><td>' + GetDisplayName(value.fields['System.AssignedTo'])
                    + '</td><td>' + GetDateFieldValue(value.fields['Microsoft.VSTS.Common.ClosedDate'])
                    + '</td><td>' + tagValue + '</td><td>' + GetFieldValue(value.fields, 'Microsoft.VSTS.Common.BusinessValue') + '</td></tr>');
            });

            $("#usDelaysCount").text(delaysCount);
            $("#usCount").text(info.length);
            $("#usDelaysPersentage").text(Math.round(delaysCount / info.length  * 100) + "%");

        }

        function ApplyFilters(info, isBusinessOnly) {
            var result = [];
            if (isBusinessOnly) {
                $(info).each(function (index, value) {
                    if (value.fields['Microsoft.VSTS.Common.BusinessValue'] == null || value.fields['Microsoft.VSTS.Common.BusinessValue'] == 1) {
                        result.push(value);
                    }
                }
                );
            }
            else
            {
                result = info;
            }

            return result;
        }

        function GetClassName(DueDate, CloseDate, isAddDay, tagValue) {
            var className = "undefined";
            if (DueDate != null && CloseDate != null) {

                var d1 = new Date(DueDate);
                d1 = new Date(d1.toDateString())
                var d2 = new Date(CloseDate);
                d2 = new Date(d2.toDateString())

                if (isAddDay) {
                    d1.setDate(d1.getDate() + 1); //Important. Added 1 day to end of release because lot of products close US after release finished
                }

                if (d2 > d1 || isFollowUp(tagValue)) {
                    className = DELAYED;
                }
                else {
                    className = "intime";
                }
            }
            else if (CloseDate == null)
            {
                var d1 = new Date(DueDate);
                d1 = new Date(d1.toDateString());
                var d2 = new Date();
                d2 = new Date(d2.toDateString());
                
                if (d2 > d1)
                {
                    className = DELAYED;
                }
            }

            return className;
        }

        function isFollowUp(tagValue) {
            tagValue = tagValue.toLowerCase().trim().replaceAll(" ", "").replaceAll("-", "");
            return tagValue.includes("followup");
        }

        function GetDateFieldValue(field) {
            var result = "";
            if (field != null) {
                var d = new Date(field);
                result = d.toDateString();
            }
            return result;

        }

        function GetDisplayName(field) {
            var result = "";
            if (field != null) {
                result = field.displayName;
            }
            return result;
        }


        function GetFieldValue(fields, fieldName) {
            var result = "";

            var isExists = fields.hasOwnProperty(fieldName);

            if (isExists) {
                result = fields[fieldName];
            }
            return result;
        }

        function GetIDLink(ID)
        {
            return  "<a target='_blank' href='@Model.ItemURL" + ID + "'>" + ID + "</a>";
        }

        $(document).ready(function () {


            $("#checkAddDay").change(function () {
                DrawTable(globalInfo, "ALL");
            });

            $("#isBusiness").change(function () {
                DrawTable(globalInfo, "ALL");
            });


            $("#releases").change(function () {
                releaseIndex = $(this)[0].selectedIndex;
                $("#endRelease").text("End date of release: " + releasesData[releaseIndex].endDate.split('T')[0]);
            });

            $("#go").click(function () {
                $.ajax("api/UserStories/?release=" + $("#releases").val() + "&areapath=" + $("#areapath").val()).done(function (info) {
                    DrawTable(info, "ALL");
                    globalInfo = info;
                });
            });

            $.ajax("api/UserStories/?release=" + $("#releases").val() + "&areapath=" + $("#areapath").val()).done(function (info) {
                DrawTable(info, "ALL");
                globalInfo = info;
            });


            var releaseIndex = $("#releases")[0].selectedIndex;
            $("#endRelease").text("End date of release: " + releasesData[releaseIndex].endDate.split('T')[0]);



        });


    </script>



</div>
