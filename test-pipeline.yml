# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml




trigger:
- master

pool:
  vmImage: windows-latest
  
variables:
  project: '**/TFSViewer.csproj'
  IISWebSite: 'default web site'

stages:
  - stage: build
    jobs:
    - job: test
      steps:
        - checkout: self
          path: 'repo'
          
        - task: DotNetCoreInstaller@1
          inputs:
            packageType: 'sdk'
            version: '7.x'

        - task: DotNetCoreCLI@2
          name: 'Publish'
          displayName: 'Publish'
          inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '$(project)'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: false
             

            
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'TFSViewerArtifacts'
            publishLocation: 'Container'
          
  - stage: release
    jobs:
    - deployment: DeployWebsite
      displayName: 'Deploy website'
      environment: 'TFSViewer.VM-ALEXEYD-10'
      strategy:
       runOnce:
           deploy:
            steps:

                - download: 'buildPipeline'
                  name: 'DownloadBuildArtifacts'
                  displayName: 'Download Build Artifacts'
                  artifact: 'TFSViewerArtifacts'
      

            
                - task: IISWebAppManagementOnMachineGroup@0
                  name: 'StopIIS'
                  displayName: 'Stop IIS website'
                  inputs:
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'StopWebsite'
                    StartStopWebsiteName:  $(IISWebSite)
                    
                - task: IISWebAppDeploymentOnMachineGroup@0
                  name: 'DeployIIS'
                  displayName: 'Deploy to IIS'
                  inputs:
                      WebSiteName:  $(IISWebSite)
                      Package: '$(Pipeline.Workspace)\buildPipeline\TFSViewerArtifacts\repo'
                      VirtualApplication : 'tfsutils'
                      TakeAppOfflineFlag: true
                  
                - task: IISWebAppManagementOnMachineGroup@0
                  name: 'StartIIS'
                  displayName: 'Start IIS website'
                  inputs:
                      IISDeploymentType: 'IISWebsite'
                      ActionIISWebsite: 'StartWebsite'
                      StartStopWebsiteName:  $(IISWebSite)






